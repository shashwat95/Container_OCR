version: '3.3'


networks:
  app_network:
    driver: bridge
    
services:
  nginx:
    user: "0:0"
    image: nginx:1.25-alpine
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/static:/app/frontend/static:ro
      - ./evidence_images:/app/evidence_images:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - ocr_app
    networks:
      - app_network
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata

  ocr_app:
    user: "0:0"
    image: containerocr_ocr_app:latest
    command: ["sh", "-c", "python3 -u frontend/app.py & python3 -u video_pipeline.py & wait"]
    #command: sleep infinity
    ports:
      - 8014:8014
    expose:
      - "8014"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://admin:admin123@db:5432/ocr_system
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - BASE_DIR=/app
      - EVIDENCE_STORAGE_PATH=/app/evidence_images
      - LOG_PATH=/app/logs
      - LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - TZ=Asia/Kolkata
    volumes:
      - .:/app:rw
      - ./evidence_images:/app/evidence_images:rw
      - ./logs:/app/logs:rw
      - ./debug_output:/app/debug_output:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - app_network

  db:
    user: "0:0"
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /data/deployment/Container_OCR/database:/schema
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
      - POSTGRES_DB=ocr_system
      - TZ=Asia/Kolkata
    ports:
      - "5433:5432"
    restart: unless-stopped
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - app_network
    environment:
      - TZ=Asia/Kolkata

  prometheus:
    user: "0:0"
    image: prom/prometheus:v2.44.0
    volumes:
      - ./docker/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - app_network
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata

  grafana:
    user: "0:0"
    image: grafana/grafana:9.5.2
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana_data:/var/lib/grafana:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - TZ=Asia/Kolkata
    ports:
      - "3000:3000"
    networks:
      - app_network
    restart: unless-stopped

  node-exporter:
    user: "0:0"
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - app_network
    restart: unless-stopped
    environment:
      - TZ=Asia/Kolkata

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

